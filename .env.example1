TAG_PERS_DIR=tag/pers

# Example env file with reasonable default values for development/debugging

#Possible values: any integer 0-5000. 0 - logging disabled, 5000 - include all
#logs.
#5000 if unspecified (rendering the value in this example pointless, but still)

TAG_LOGDEPTH=5000 

#All sections, the logs from which you wish to have logged.
#Overrides TAG_LOGSECTS_EXCL. If neither _INCL nor _EXCL are specified, 
#includes logs from all sections that are of a suitable depth
#
#format: 
#TAG_LOGSECTS_INCL=SECT0, ...

#Not used in this example
#TAG_LOGSECTS_INCL

#All sections, the logs from which you wish to NOT have logged.
#format:
#TAG_LOGSECTS_EXCL=SECT0, ...

#In this example, it is set to an empty string
TAG_LOGSECTS_EXCL=

#Whether or not to print logs to stderr. Possible values (case-insensitive):
#true
#false
#
#true if unspecified

TAG_LOGSTDERR=true

#Mode for opening logfile in. It only makes sense to specify this if you plan to 
#save logging to a file via the TAG_LOGFILE option. This can be any mode useable 
#with the python open() function (or generally the 'open' kernel syscall)
#
#set to 'w' by default, meaning your log files WILL get overwritten. A way
#to tell where one log file begins and another ends is by the 
#"[UNDEF][START <time>]" message. Though there is sometimes a preceding log from 
#the same session to do with the logging function.
#
#format:
#TAG_LOGSECTS_EXCL=SECT0, ...
#
#Useful values:
#
#w - overwrite logfile 
#r+ - append to logfile

TAG_LOGFILE_MODE="w"

#logfile - relative or absolute path
#format:
#TAG_LOGFILE=<path>

TAG_LOGFILE="tmp/logfile"

#host and port for interfaces to connect to and issue tag_prot-conformant
#commands to
TAG_TCP_HOST="localhost"
TAG_TCP_PORT=15324
